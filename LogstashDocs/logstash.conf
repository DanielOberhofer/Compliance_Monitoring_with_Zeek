input {
  beats {
    port => 5044
  }
}

filter {
  if [conn_log] {
    date {
      match => [ "[conn_log][ts]", "UNIX" ]
    }
    mutate {
      convert => {
        "[conn_log][id.orig_p]" => "string"
        "[conn_log][id.resp_p]" => "string"
      }
    }
  }

  if [first_layer_log] {
    date {
      match => [ "[first_layer_log][ts]", "UNIX" ]
    }
    mutate {
      convert => {
        "[first_layer_log][id.orig_p]" => "string"
        "[first_layer_log][id.resp_p]" => "string"
      }
    }
  }

  if [second_layer_log] {
    date {
      match => [ "[second_layer_log][ts]", "UNIX" ]
    }
    mutate {
      convert => {
        "[second_layer_log][id.orig_p]" => "string"
        "[second_layer_log][id.resp_p]" => "string"
      }
    }
  }
}

output {
  if [conn_log] {
	elasticsearch {
      index => "zeek-conn"
      manage_template => false
	  template => "/usr/share/logstash/input_templates/zeek_conn_template.json"
      hosts => "${ELASTIC_HOSTS}"
      action => "create"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
    }
  } 
  
  if [first_layer_log]{
	elasticsearch {
      index => "zeek-first"
      manage_template => false
	  template => "/usr/share/logstash/input_templates/zeek_first_template.json"
      hosts => "${ELASTIC_HOSTS}"
      action => "create"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
    }
  }
  if [second_layer_log]{
	elasticsearch {
      index => "zeek-second"
      manage_template => false
      hosts => "${ELASTIC_HOSTS}"
      action => "create"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
    }
  }
  
# --------------------------------------------------------------------------------- 
# if statement for second layer log --> TODO: create custom index plate first  
  else {
    elasticsearch {
      index => "logstash-%{+YYYY.MM.dd}"
      manage_template => false
      hosts => "${ELASTIC_HOSTS}"
      action => "create"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
    }
  }
   
}
